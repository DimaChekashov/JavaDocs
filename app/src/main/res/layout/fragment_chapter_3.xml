<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fillViewport="true">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="@android:color/white"
        android:gravity="top"
        android:orientation="vertical"
        android:paddingLeft="15dp"
        android:paddingTop="25dp"
        android:paddingRight="15dp"
        android:paddingBottom="20dp">

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginBottom="18dp"
            android:text="@string/title_chapter_3"
            android:textColor="@color/colorPrimaryText"
            android:textSize="28sp"
            android:textStyle="bold" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:text="Для хранения данных в программе предназначены переменные. Переменная представляет именнованную область памяти, которая хранит значение определенного типа. Каждая переменная имеет тип, имя и значение. Тип определяет, какую информацию может хранить переменная или диапазон допустимых значений."
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:text="Переменные объявляются следующим образом:"
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:background="@color/colorSecondaryDark"
            android:padding="5dp"
            android:text="тип_данных имя_переменной;"
            android:textColor="#ffffff"
            android:textSize="14sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:text="Например, определим переменную, которая будет называться x и будет иметь тип int:"
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:background="@color/colorSecondaryDark"
            android:padding="5dp"
            android:text="int x;"
            android:textColor="#ffffff"
            android:textSize="14sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:text="В этом выражении мы объявляем переменную x типа int. То есть x будет хранить некоторое число не больше 4 байт."
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:text="В качестве имени переменной может выступать любое произвольное название, которое удовлетворяет следующим требованиям:"
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:paddingRight="20dp"
            android:paddingLeft="20dp"
            android:layout_marginBottom="5dp"
            android:text="имя может содержать любые алфавитно-цифровые символы, а также знак подчеркивания, при этом первый символ в имени не должен быть цифрой"
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:paddingRight="20dp"
            android:paddingLeft="20dp"
            android:layout_marginBottom="5dp"
            android:text="в имени не должно быть знаков пунктуации и пробелов"
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:paddingRight="20dp"
            android:paddingLeft="20dp"
            android:layout_marginBottom="5dp"
            android:text="имя не может быть ключевым словом языка Java"
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="5dp"
            android:layout_marginBottom="10dp"
            android:text="Кроме того, при объявлении и последующем использовании надо учитывать, что Java - регистрозависимый язык, поэтому следующие объявления int num; и int NUM; будут представлять две разных переменных."
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:text="Объявив переменную, мы можем присвоить ей значений:"
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:background="@color/colorSecondaryDark"
            android:padding="5dp"
            android:text="int x; // объявление переменной \nx = 10; // присвоения значения\nSystem.out.println(x); // 10"
            android:textColor="#ffffff"
            android:textSize="14sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:text="Также можно привоить значение переменной при ее объявлении. Этот процесс называется инициализацией:"
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:background="@color/colorSecondaryDark"
            android:padding="5dp"
            android:text="int x = 10; // объявление и инициализация переменной\nSystem.out.println(x); // 10"
            android:textColor="#ffffff"
            android:textSize="14sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:text="Если мы не присвоим переменной значение до ее использования, то мы можем получить ошибку, например, в следующем случае:"
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:background="@color/colorSecondaryDark"
            android:padding="5dp"
            android:text="int x;\nSystem.out.println(x);"
            android:textColor="#ffffff"
            android:textSize="14sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:text="Через запятую можно объявить сразу несколько переменных одного типа:"
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:background="@color/colorSecondaryDark"
            android:padding="5dp"
            android:text="int x, y;\nx = 10;\ny = 25;\nSystem.out.println(x); // 10\nSystem.out.println(y); // 25"
            android:textColor="#ffffff"
            android:textSize="14sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:text="Также можно их сразу инициализировать:"
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:background="@color/colorSecondaryDark"
            android:padding="5dp"
            android:text="int x = 8, y = 15;\nSystem.out.println(x); // 8\nSystem.out.println(y); // 15"
            android:textColor="#ffffff"
            android:textSize="14sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:text="Отличительной особенностью переменных является то, что мы можем в процессе работы программы изменять их значение:"
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:background="@color/colorSecondaryDark"
            android:padding="5dp"
            android:text="int x = 10;\nSystem.out.println(x); // 10\nx = 25;\nSystem.out.println(x); // 25"
            android:textColor="#ffffff"
            android:textSize="14sp" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:layout_marginBottom="12dp"
            android:text="Ключевое слово var"
            android:textColor="@color/colorPrimaryText"
            android:textSize="22sp"
            android:textStyle="bold" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:text="Начиная с Java 10 в язык было добавлено ключевое слово var, которое также позволяет определять переменную:"
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:background="@color/colorSecondaryDark"
            android:padding="5dp"
            android:text="var x = 10;\nSystem.out.println(x); // 10"
            android:textColor="#ffffff"
            android:textSize="14sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:text="Слово var ставится вместо типа данных, а сам тип переменной выводится из того значения, которое ей присваивается. Например, переменой x приваивается число 10, значит, переменная будет представлять тип int."
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:text="Но если переменная объявляется с помощью var, то мы обязательно должны инициализировать ее, то есть предоставить ей начальное значение, иначе мы получим ошибку, как, например, в следующм случае:"
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:background="@color/colorSecondaryDark"
            android:padding="5dp"
            android:text="var x; // ! Ошибка, переменная не инициализирована\nx = 10;"
            android:textColor="#ffffff"
            android:textSize="14sp" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:layout_marginBottom="12dp"
            android:text="Константы"
            android:textColor="@color/colorPrimaryText"
            android:textSize="22sp"
            android:textStyle="bold" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:text="Кроме переменных, в Java для хранения данных можно использовать константы. В отличие от переменных константам можно присвоить значение только один раз. Константа объявляется также, как и переменная, только вначале идет ключевое слово final:"
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:background="@color/colorSecondaryDark"
            android:padding="5dp"
            android:text="final int LIMIT = 5;\nSystem.out.println(LIMIT); // 5\n// LIMIT=57; // так мы уже не можем написать, так как LIMIT - константа"
            android:textColor="#ffffff"
            android:textSize="14sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:text="Как правило, константы имеют имена в верхнем регистре."
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginBottom="10dp"
            android:text="Константы позволяют задать такие переменные, которые не должны больше изменяться. Например, если у нас есть переменная для хранения числа pi, то мы можем объявить ее константой, так как ее значение постоянно."
            android:textColor="@color/colorPrimaryText"
            android:textSize="16sp" />

    </LinearLayout>

</ScrollView>